apiVersion: apps/v1
kind: Deployment
metadata:
  name: nkp-cluster-cleaner
  namespace: kommander
  labels:
    app: nkp-cluster-cleaner
spec:
  replicas: {{ $.Values.deployment.replicas }}
  selector:
    matchLabels:
      app: nkp-cluster-cleaner
  template:
    metadata:
      labels:
        app: nkp-cluster-cleaner
    spec:
      containers:
      - name: nkp-cluster-cleaner
        image: {{ $.Values.deployment.image }}
        command:
        - nkp-cluster-cleaner
        args:
        - serve 
        env:
        - name: HOST
          value: "0.0.0.0"
        - name: KUBECONFIG
          value: "/config/kube/kubeconfig"
        - name: CONFIG
          value: "/config/app/config.yaml"
        - name: "PREFIX"
          value: "{{ $.Values.ingress.prefix }}"
{{- if eq .Values.redis.enabled true }}
        - name: "REDIS_HOST"
          value: "{{ $.Values.redis.hostname }}"
        - name: "REDIS_PORT"
          value: "{{ $.Values.redis.port }}"
        - name: "REDIS_DB"
          value: "{{ $.Values.redis.db }}"
{{- if eq .Values.valkey.enabled true }}
        - name: "REDIS_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ $.Values.valkey.secretName }}"
              key: "{{ $.Values.valkey.secretPasswordKey }}"
{{- else if eq .Values.redis.authentication.enabled true }}
        - name: "REDIS_USERNAME"
          valueFrom:
            secretKeyRef:
              name: "{{ $.Values.redis.authentication.secretName }}"
              key: "{{ $.Values.redis.authentication.secretUsernameKey }}"
        - name: "REDIS_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ $.Values.redis.authentication.secretName }}"
              key: "{{ $.Values.redis.authentication.secretPasswordKey }}"
{{- end }}
{{- else }}
        - name: "NO_REDIS"
          value: "true"
{{- end }}
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: kubeconfig
          mountPath: /config/kube
          readOnly: true
        - name: config
          mountPath: /config/app
          readOnly: true
      volumes:
      - name: kubeconfig
        secret:
          secretName: {{ $.Values.app.kubeconfigSecretRef }}
          defaultMode: 0444
      - name: config
        configMap:
          name: nkp-cluster-cleaner-config 
          defaultMode: 0444

